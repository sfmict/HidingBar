<Ui>
	<Frame name="HidingBarAddonPanel" enableMouse="true" frameLevel="100" clampedToScreen="true" virtual="true">
		<Layers>
			<Layer level="BACKGROUND">
				<Texture parentKey="bg" setAllPoints="true" file="Interface/ChatFrame/ChatFrameBackground"/>
			</Layer>
		</Layers>
	</Frame>

	<Frame name="HidingBarAddonOptionsPanel" virtual="true">
		<Scripts>
			<OnLoad>
				self:SetBackdrop(HidingBarConfigAddon.optionsPanelBackdrop)
				self:SetBackdropColor(.1, .1, .1, .3)
				self:SetBackdropBorderColor(.5, .5, .5)
			</OnLoad>
		</Scripts>
	</Frame>

	<Button name="HidingBarAddonColorButton" virtual="true">
		<Size x="25" y="18"/>
		<Layers>
			<Layer level="ARTWORK">
				<Texture parentKey="color">
					<Anchors>
						<Anchor point="TOPLEFT" x="2" y="-2"/>
						<Anchor point="BOTTOMRIGHT" x="-2" y="2"/>
					</Anchors>
				</Texture>
			</Layer>
		</Layers>
		<Scripts>
			<OnLoad>
				self:SetBackdrop(HidingBarConfigAddon.colorButtonBackdrop)
				self:SetBackdropBorderColor(.3, .3, .3, .8)
			</OnLoad>
			<OnEnter>self:SetBackdropBorderColor(.5, .5, .5, .8)</OnEnter>
			<OnLeave>self:SetBackdropBorderColor(.3, .3, .3, .8)</OnLeave>
		</Scripts>
	</Button>

	<Button name="HidingBarAddonButtonTemplate" clipChildren="true"  virtual="true">
		<Size x="32" y="32"/>
		<Layers>
			<Layer level="ARTWORK">
				<Texture parentKey="icon">
					<Size x="30" y="30"/>
					<Anchors>
						<Anchor point="CENTER"/>
					</Anchors>
				</Texture>
			</Layer>
		</Layers>
	</Button>

	<Button name="HidingBarAddonCreatedButtonTemplate" inherits="HidingBarAddonButtonTemplate" virtual="true">
		<Layers>
			<Layer level="OVERLAY">
				<Texture parentKey="highlight" setAllPoints="true" hidden="true"/>
			</Layer>
		</Layers>
		<Scripts>
			<OnLoad>
				self:RegisterForClicks("LeftButtonUp", "RightButtonUp", "MiddleButtonUp")
			</OnLoad>
			<OnEnter>
				if self.__MSQ_Enabled then
					self.highlight:Show()
				else
					self.icon:SetSize(32, 32)
				end
				if self.data.OnEnter then
					self.data.OnEnter(self)
				end
				if self.data.OnTooltipShow then
					local tooltipAnchor = "ANCHOR_LEFT"
					local anchor = self:GetParent().config.anchor
					if anchor == "left" then
						tooltipAnchor = "ANCHOR_RIGHT"
					elseif anchor == "top" then
						tooltipAnchor = "ANCHOR_BOTTOMLEFT"
					end
					GameTooltip:SetOwner(self, tooltipAnchor)
					GameTooltip:ClearLines()
					self.data.OnTooltipShow(GameTooltip)
					GameTooltip:Show()
				end
			</OnEnter>
			<OnLeave>
				self.highlight:Hide()
				if not self.__MSQ_Enabled then
					self.icon:SetSize(30, 30)
				end
				if self.data.OnLeave then
					self.data.OnLeave(self)
				end
				if self.data.OnTooltipShow then
					GameTooltip:Hide()
				end
			</OnLeave>
			<OnMouseDown>
				self.icon:SetScale(.9)
			</OnMouseDown>
			<OnMouseUp>
				self.icon:SetScale(1)
			</OnMouseUp>
		</Scripts>
	</Button>

	<CheckButton name="HidingBarAddonConfigButtonTemplate" inherits="HidingBarAddonButtonTemplate" movable="true" virtual="true">
		<CheckedTexture file="Interface/BUTTONS/UI-GroupLoot-Pass-Up">
			<Size x="20" y="20"/>
			<Anchors>
				<Anchor point="TOPRIGHT"/>
			</Anchors>
		</CheckedTexture>
		<Scripts>
			<OnLoad>
				self:RegisterForDrag("LeftButton")
				self.updateChecked = function(self, checked)
					if checked then
						self.icon:SetVertexColor(1, 1, 1)
					else
						self.icon:SetVertexColor(unpack(self.color))
					end
					self.icon:SetDesaturated(checked or self.iconDesaturated)
				end
				hooksecurefunc(self, "SetChecked", self.updateChecked)
			</OnLoad>
			<OnEnter>
				self.icon:SetSize(32, 32)
				GameTooltip:SetOwner(self, "ANCHOR_BOTTOMRIGHT")
				GameTooltip:SetText(self.name)
				GameTooltip:Show()
			</OnEnter>
			<OnLeave>
				self.icon:SetSize(30, 30)
				GameTooltip:Hide()
			</OnLeave>
			<OnClick>
				self:updateChecked(self:GetChecked())
			</OnClick>
		</Scripts>
	</CheckButton>

	<CheckButton name="HidingBarAddonConfigMButtonTemplate" inherits="HidingBarAddonButtonTemplate" movable="true" virtual="true">
		<Layers>
			<Layer level="BACKGROUND">
				<Texture parentKey="bg" file ="Interface/Minimap/UI-Minimap-Background">
					<Size x="20" y="20"/>
					<Anchors>
						<Anchor point="CENTER"/>
					</Anchors>
				</Texture>
			</Layer>
			<Layer level="OVERLAY" textureSubLevel="1">
				<Texture parentKey="border" file ="Interface/Minimap/MiniMap-TrackingBorder">
					<Size x="54" y="54"/>
					<Anchors>
						<Anchor point="TOPLEFT" y="-1"/>
					</Anchors>
				</Texture>
			</Layer>
			<Layer level="OVERLAY" textureSubLevel="2">
				<Texture parentKey="check" file="Interface/BUTTONS/UI-GroupLoot-Pass-Up">
					<Size x="15" y="15"/>
					<Anchors>
						<Anchor point="TOPRIGHT"/>
					</Anchors>
				</Texture>
			</Layer>
		</Layers>
		<HighlightTexture parentKey="highlight" file="Interface/Minimap/UI-Minimap-ZoomButton-Highlight" alphaMode="ADD">
			<Size x="32" y="32"/>
			<Anchors>
				<Anchor point="CENTER" y="-1"/>
			</Anchors>
		</HighlightTexture>
		<Scripts>
			<OnLoad>
				self:RegisterForClicks("LeftButtonUp", "RightButtonUp")
				self:RegisterForDrag("LeftButton")
				self.icon:SetSize(18, 18)
				self.updateChecked = function(self, checked)
					if checked then
						self.icon:SetVertexColor(1, 1, 1)
					else
						self.icon:SetVertexColor(unpack(self.color))
					end
					self.icon:SetDesaturated(checked)
					self.bg:SetDesaturated(checked)
					self.border:SetDesaturated(checked)
					self.highlight:SetDesaturated(checked)
					self.check:SetShown(checked)
				end
				hooksecurefunc(self, "SetChecked", self.updateChecked)
			</OnLoad>
			<OnEnter>
				GameTooltip:SetOwner(self, "ANCHOR_BOTTOMRIGHT")
				GameTooltip:SetText(self.title)
				GameTooltip:Show()
			</OnEnter>
			<OnLeave>
				GameTooltip:Hide()
			</OnLeave>
			<OnClick>
				self:updateChecked(self:GetChecked())
			</OnClick>
		</Scripts>
	</CheckButton>

	<CheckButton name="HidingBarAddonCheckButtonTemplate" inherits="OptionsBaseCheckButtonTemplate" virtual="true">
		<HitRectInsets left="0" right="-100" top="0" bottom="0"/>
		<Layers>
			<Layer level="ARTWORK">
				<FontString inherits="GameFontHighlightLeft" parentKey="Text">
					<Anchors>
						<Anchor point="LEFT" relativePoint="RIGHT" x="1"/>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Scripts>
			<OnEnable>self.Text:SetTextColor(1,1,1,1)</OnEnable>
			<OnDisable>self.Text:SetTextColor(.5,.5,.5,1)</OnDisable>
		</Scripts>
	</CheckButton>

	<Button name="HidingBarAddonRadioButtonTemplate" virtual="true">
		<Size x="22" y="22"/>
		<HitRectInsets left="0" right="-100" top="0" bottom="0"/>
		<Layers>
			<Layer level="ARTWORK">
				<FontString inherits="GameFontHighlightLeft" parentKey="Text">
					<Anchors>
						<Anchor point="LEFT" relativePoint="RIGHT" x="1"/>
					</Anchors>
				</FontString>
				<Texture parentKey="check" file="Interface/Common/UI-DropDownRadioChecks" hidden="true">
					<Size x="20" y="20"/>
					<Anchors>
						<Anchor point="CENTER" x="1" y="1"/>
					</Anchors>
					<TexCoords left="0" right=".5" top=".5" bottom="1"/>
				</Texture>
			</Layer>
		</Layers>
		<NormalTexture file="Interface/Common/UI-DropDownRadioChecks">
			<Size x="20" y="20"/>
			<Anchors>
				<Anchor point="CENTER" x="1" y="1"/>
			</Anchors>
			<TexCoords left=".5" right="1" top=".5" bottom="1"/>
		</NormalTexture>
		<HighlightTexture alphaMode="ADD" file="Interface/Minimap/UI-Minimap-ZoomButton-Highlight">
			<Size x="16" y="16"/>
			<Anchors>
				<Anchor point="CENTER" y="-1"/>
			</Anchors>
		</HighlightTexture>
	</Button>

	<Slider name="HidingBarAddonSliderTemplate" inherits="HorizontalSliderTemplate" virtual="true">
		<Size x="500" y="17"/>
		<Layers>
			<Layer level="ARTWORK">
				<FontString parentKey="text" inherits="GameFontNormalSmall">
					<Anchors>
						<Anchor point="BOTTOM" relativePoint="TOP"/>
					</Anchors>
				</FontString>
				<FontString parentKey="label" inherits="GameFontHighlightSmall">
					<Anchors>
						<Anchor point="LEFT" relativePoint="RIGHT" x="2" y="1"/>
					</Anchors>
				</FontString>
			</Layer>
		</Layers>
		<Scripts>
			<OnDisable>
				self.label:SetVertexColor(GRAY_FONT_COLOR:GetRGB())
				self.text:SetVertexColor(GRAY_FONT_COLOR:GetRGB())
			</OnDisable>
			<OnEnable>
				self.label:SetVertexColor(HIGHLIGHT_FONT_COLOR:GetRGB())
				self.text:SetVertexColor(NORMAL_FONT_COLOR:GetRGB())
			</OnEnable>
		</Scripts>
	</Slider>

	<EditBox name="HidingBarAddonEditBoxTemplate" inherits="InputBoxScriptTemplate" multiLine="false" autoFocus="false" virtual="true">
		<FontString inherits="GameFontHighlightSmall" justifyH="CENTER"/>
		<Scripts>
			<OnLoad>
				self:SetBackdrop(HidingBarConfigAddon.editBoxBackdrop)
				self:SetBackdropColor(0, 0, 0, .5)
				self:SetBackdropBorderColor(.3, .3, .3, .8)
			</OnLoad>
			<OnEditFocusGained>self:HighlightText()</OnEditFocusGained>
			<OnEnterPressed function="EditBox_ClearFocus"/>
			<OnEnter>self:SetBackdropBorderColor(.5, .5, .5, .8)</OnEnter>
			<OnLeave>self:SetBackdropBorderColor(.3, .3, .3, .8)</OnLeave>
		</Scripts>
	</EditBox>

	<EditBox name="HidingBarAddonNumberTextBox" inherits="HidingBarAddonEditBoxTemplate" numeric="true" letters="1" virtual="true">
		<Size x="15" y="18"/>
	</EditBox>

	<EditBox name="HidingBarAddonDecimalTextBox" inherits="HidingBarAddonEditBoxTemplate" letters="4" virtual="true">
		<Size x="32" y="18"/>
	</EditBox>

	<Button name="HidingBarAddonTabTemplate" virtual="true">
		<Size x="115" y="24"/>
		<Layers>
			<Layer level="BORDER">
				<Texture parentKey="leftDisabled" file="Interface/OptionsFrame/UI-OptionsFrame-ActiveTab" hidden="true">
					<Size x="20" y="24"/>
					<Anchors>
						<Anchor point="BOTTOMLEFT" x="0" y="-3"/>
					</Anchors>
					<TexCoords left="0" right=".15625" top="0" bottom="1"/>
				</Texture>
				<Texture parentKey="rightDisabled" file="Interface/OptionsFrame/UI-OptionsFrame-ActiveTab" hidden="true">
					<Size x="20" y="24"/>
					<Anchors>
						<Anchor point="BOTTOMRIGHT" x="0" y="-3"/>
					</Anchors>
					<TexCoords left=".84375" right="1" top="0" bottom="1"/>
				</Texture>
				<Texture parentKey="middleDisabled" file="Interface/OptionsFrame/UI-OptionsFrame-ActiveTab" hidden="true">
					<Size x="88" y="24"/>
					<Anchors>
						<Anchor point="LEFT" relativeKey="$parent.leftDisabled" relativePoint="RIGHT"/>
						<Anchor point="RIGHT" relativeKey="$parent.rightDisabled" relativePoint="LEFT"/>
					</Anchors>
					<TexCoords left=".15625" right=".84375" top="0" bottom="1"/>
				</Texture>
				<Texture parentKey="left" file="Interface/OptionsFrame/UI-OptionsFrame-InActiveTab">
					<Size x="20" y="24"/>
					<Anchors>
						<Anchor point="TOPLEFT"/>
					</Anchors>
					<TexCoords left="0" right=".15625" top="0" bottom="1"/>
				</Texture>
				<Texture parentKey="right" file="Interface/OptionsFrame/UI-OptionsFrame-InActiveTab">
					<Size x="20" y="24"/>
					<Anchors>
						<Anchor point="TOPRIGHT"/>
					</Anchors>
					<TexCoords left=".84375" right="1" top="0" bottom="1"/>
				</Texture>
				<Texture parentKey="middle" file="Interface/OptionsFrame/UI-OptionsFrame-InActiveTab">
					<Size x="88" y="24"/>
					<Anchors>
						<Anchor point="LEFT" relativeKey="$parent.left" relativePoint="RIGHT"/>
						<Anchor point="RIGHT" relativeKey="$parent.right" relativePoint="LEFT"/>
					</Anchors>
					<TexCoords left=".15625" right=".84375" top="0" bottom="1"/>
				</Texture>
			</Layer>
		</Layers>
		<ButtonText parentKey="text" justifyH="CENTER">
			<Anchors>
				<Anchor point="CENTER" x="0" y="-3"/>
			</Anchors>
		</ButtonText>
		<NormalFont style="GameFontNormalSmall"/>
		<HighlightFont style="GameFontHighlightSmall"/>
		<DisabledFont style="GameFontHighlightSmall"/>
		<HighlightTexture name="$parentHighlightTexture" file="Interface/PaperDollInfoFrame/UI-Character-Tab-Highlight" alphaMode="ADD">
			<Anchors>
				<Anchor point="LEFT" x="10" y="-4"/>
				<Anchor point="RIGHT" x="-10" y="-4"/>
			</Anchors>
		</HighlightTexture>
		<Scripts>
			<OnLoad>
				self:SetFrameLevel(self:GetFrameLevel() + 1)
			</OnLoad>
			<OnDisable>
				self.left:Hide()
				self.right:Hide()
				self.middle:Hide()
				self.leftDisabled:Show()
				self.rightDisabled:Show()
				self.middleDisabled:Show()
			</OnDisable>
			<OnEnable>
				self.left:Show()
				self.right:Show()
				self.middle:Show()
				self.leftDisabled:Hide()
				self.rightDisabled:Hide()
				self.middleDisabled:Hide()
			</OnEnable>
		</Scripts>
	</Button>

	<EditBox name="HidingBarAddonAddTextBox" inherits="InputBoxTemplate" autoFocus="false" virtual="true">
		<Size x="243" y="20"/>
		<Frames>
			<Button parentKey="clearButton" hidden="true">
				<Size x="17" y="17"/>
				<Anchors>
					<Anchor point="RIGHT" x="-3" y="0"/>
				</Anchors>
				<Layers>
					<Layer level="ARTWORK">
						<Texture file="Interface\FriendsFrame\ClearBroadcastIcon" alpha="0.5" parentKey="texture">
							<Size x="17" y="17"/>
							<Anchors>
								<Anchor point="CENTER"/>
							</Anchors>
						</Texture>
					</Layer>
				</Layers>
				<Scripts>
					<OnEnter>
						self.texture:SetAlpha(1.0)
					</OnEnter>
					<OnLeave>
						self.texture:SetAlpha(0.5)
					</OnLeave>
					<OnMouseDown>
						if self:IsEnabled() then
							self.texture:SetPoint("CENTER", 1, -1)
						end
					</OnMouseDown>
					<OnMouseUp>
						self.texture:SetPoint("CENTER")
					</OnMouseUp>
					<OnClick function="SearchBoxTemplateClearButton_OnClick"/>
				</Scripts>
			</Button>
		</Frames>
		<FontString inherits="GameFontHighlightSmall"/>
		<Scripts>
			<OnLoad>
				self:SetTextInsets(0, 16, 0, 0)
			</OnLoad>
			<OnEscapePressed function="EditBox_ClearFocus"/>
			<OnEditFocusLost>
				if self:GetText() == "" then
					self.clearButton:Hide()
				end
			</OnEditFocusLost>
			<OnEditFocusGained>
				self.clearButton:Show()
			</OnEditFocusGained>
		</Scripts>
	</EditBox>

	<Button name="HidingBarAddonIgnoreButtonTemplate" virtual="true">
		<Size x="305" y="18"/>
		<Layers>
			<Layer level="BACKGROUND">
				<Texture parentKey="highlight" file="Interface/QuestFrame/UI-QuestLogTitleHighlight" alphaMode="ADD" hidden="true">
					<Anchors>
						<Anchor point="TOPLEFT" x="0" y="1"/>
						<Anchor point="BOTTOMRIGHT" x="-22" y="1"/>
					</Anchors>
					<Color r=".196" g=".388" b=".8"/>
				</Texture>
			</Layer>
		</Layers>
		<Frames>
			<Button parentKey="removeButton" alpha="0">
				<Size x="16" y="16"/>
				<Anchors>
					<Anchor point="RIGHT" x="-5" y="0"/>
				</Anchors>
				<Layers>
					<Layer level="BACKGROUND">
						<Texture parentKey="icon" file="Interface/BUTTONS/UI-GroupLoot-Pass-Up">
							<Size x="16" y="16"/>
							<Anchors>
								<Anchor point="CENTER"/>
							</Anchors>
							<Color r=".7" g=".7" b=".7"/>
						</Texture>
					</Layer>
				</Layers>
				<Scripts>
					<OnEnter>
						self.icon:SetVertexColor(1, 1, 1)
						self:SetAlpha(1)
						self:GetParent().highlight:Show()
					</OnEnter>
					<OnLeave>
						self.icon:SetVertexColor(.7, .7, .7)
						self:SetAlpha(0)
						self:GetParent().highlight:Hide()
					</OnLeave>
					<OnMouseDown>self.icon:SetScale(.9)</OnMouseDown>
					<OnMouseUp>self.icon:SetScale(1)</OnMouseUp>
				</Scripts>
			</Button>
		</Frames>
		<ButtonText parentKey="text" justifyH="LEFT" wordwrap="false">
			<Anchors>
				<Anchor point="LEFT" x="2"/>
				<Anchor point="RIGHT" relativeKey="$parent.removeButton" relativePoint="LEFT" x="-2"/>
			</Anchors>
		</ButtonText>
		<NormalFont style="GameFontHighlight"/>
		<DisabledFont style="GameFontDisableSmall"/>
		<Scripts>
			<OnEnter>
				self.highlight:Show()
				self.removeButton:SetAlpha(1)
				if self.text:GetStringWidth() > self.text:GetWidth() then
					GameTooltip:SetOwner(self, "ANCHOR_BOTTOMRIGHT", -305, 0)
					GameTooltip:SetText(self:GetText())
					GameTooltip:Show()
				end
			</OnEnter>
			<OnLeave>
				self.highlight:Hide()
				self.removeButton:SetAlpha(0)
				GameTooltip:Hide()
			</OnLeave>
			<OnEnable>self.removeButton:Show()</OnEnable>
			<OnDisable>self.removeButton:Hide()</OnDisable>
		</Scripts>
	</Button>

	<ScrollFrame name="HidingBarAddonHybridScrollTemplate" inherits="HybridScrollFrameTemplate" virtual="true">
		<Frames>
			<Slider parentKey="scrollBar" inherits="HybridScrollBarTrimTemplate">
				<Anchors>
					<Anchor point="TOPLEFT" relativePoint="TOPRIGHT" x="4" y="-18"/>
					<Anchor point="BOTTOMLEFT" relativePoint="BOTTOMRIGHT" x="4" y="15"/>
				</Anchors>
			</Slider>
		</Frames>
	</ScrollFrame>

	<Button name="HidingBarAddonMailTemplate" virtual="true">
		<Size x="32" y="32"/>
		<Layers>
			<Layer level="ARTWORK">
				<Texture parentKey="icon" file="Interface/Icons/INV_Letter_15">
					<Size x="18" y="18"/>
					<Anchors>
						<Anchor point="CENTER"/>
					</Anchors>
				</Texture>
			</Layer>
			<Layer level="OVERLAY">
				<Texture parentKey="border" file ="Interface/Minimap/MiniMap-TrackingBorder">
					<Size x="54" y="54"/>
					<Anchors>
						<Anchor point="TOPLEFT" y="-1"/>
					</Anchors>
				</Texture>
			</Layer>
		</Layers>
		<HighlightTexture parentKey="highlight" file="Interface/Minimap/UI-Minimap-ZoomButton-Highlight" alphaMode="ADD">
			<Size x="32" y="32"/>
			<Anchors>
				<Anchor point="CENTER" y="-1"/>
			</Anchors>
		</HighlightTexture>
	</Button>
</Ui>